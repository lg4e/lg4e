  $$P \\to Q, \\quad P \\quad \\therefore Q $$
| 命题$ P $称为条件命题的前件（antecedent），命题Q成为条件命题（$ Q $）的後件（consequent）

。其中，前半部分（$ P $）称作前件（antecedent），后半部分（$ Q $）为後件（consequent）。

尝试给出定义

这个条件命题的真值(truth value)取决于 :math:`P` 和 :math:`Q` 的真值。如果我们把所有的情况都罗列出来，就会得到下面这个表格：

.. figure:: /static/img/Ch1_002.png
   :alt: img2
   :figwidth: 50%
   :name: fig2

   Ch1_002.png

现在让我们专注于第一行的内容。「若 :math:`P` 则 :math:`Q` 」意味着当P为真时，Q一定为真。


等价形式：从逻辑上讲，条件命题 𝑝→𝑞等价于 "非p" 或 𝑞（记作 ¬𝑝∨𝑞）。

在自然语言中，我们通常认为“如果……那么……”包含某种因果或必然联系，然而在经典逻辑中，条件命题（物质蕴涵）的定义仅仅依赖于真假，而不涉及因果关系。所以，表达式“¬p ∨ q”并不是在描述一个因果过程，而只是说：   “要么我不拥有比尔·盖茨的所有财富，要么我将是富有的。” 这在逻辑上完全等价于原命题，但在直观上可能让人难以联想到“如果……那么……”的日常用法。

总的来说，这种转换（p → q 等价于 ¬p ∨ q）是经典逻辑中定义物质蕴涵的方式，它确保了在 p 为假时命题始终为真，从而建立了一个简单、统一的真值规则。

但是在计算机，¬𝑝∨𝑞 は　OR　計算、p → q 直接計算できない、　真值是相等的，在计算的过程中就可以互换。
