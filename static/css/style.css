/* 全局变量 */
:root {
    --navbar-height: 5.93rem;
    --primary-color: #1f4e78;
    --hover-color: #d1ecf1;
}

/* 基础样式 */
body {
    font-family: 'Open Sans', sans-serif;
    padding-top: var(--navbar-height);
}

/* 导航栏样式 */
.bg-custom {
    background-color: var(--primary-color);
}

.navbar-brand {
    font-size: 1.3rem;
    color: white !important;
}

.navbar-brand sub {
    font-size: 1.1em;
}

.navbar-nav .nav-link {
    color: white !important;
    transition: color 0.3s ease-in-out;
}

.navbar-brand:hover,
.navbar-nav .nav-link:hover {
    color: var(--hover-color) !important;
}

.navbar-nav {
    gap: 1rem;
}

.navbar-toggler {
    margin-left: auto;
}

/* 表格样式 */
.logic-table {
    width: 100%;
    max-width: 53%;
}

/* 引用样式 */
.slogan-reference,
.wiki-reference {
    font-size: 0.85rem;
    font-style: italic;
}

body.tutorials .container {
    width: 90%;
}

/* tutorials页面标题样式 */
body.tutorials .tutorials-page-title,
body.category .category-page-title{
    font-weight: 700;
}

body.category .category-description{
    width: 70ch; /* 行长限制为 70 个字符 */
    text-align: justify; /* 增加文本两端对齐 */
}

/* 通用卡片样式 */
.card-common {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    background-color: #f8f9fa; /* 浅灰背景 */
    border: 1.5px solid #ddd;
    border-radius: 9px;
    cursor: pointer;
}

/* 卡片悬停效果（统一样式） */
.card-common:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Tutorials 页面卡片样式 */
.tutorials-card {
    height: 120px; /* Tutorials 页面卡片高度 */
    font-size: 1.2rem;
    font-weight: 600;
    text-align: center;
}

/* Tutorials 页面卡片标题样式 */
.tutorials-card-title {
    font-size: 1.2rem;
    font-weight: 600;
    text-align: center;
}

/* Tutorials 页面卡片链接样式 */
.tutorials-card-link {
    text-decoration: none; /* 默认状态无下划线 */
    transition: color 0.2s ease; /* 添加平滑过渡效果 */
}

/* Tutorials 页面卡片链接悬停样式 */
.tutorials-card-link:hover {
    text-decoration: none; /* 悬停时也不显示下划线 */
}

/* Category 页面卡片样式 */
.card-body {
    display: flex;
    flex-direction: column; /* 让内容竖直排列 */
    justify-content: flex-end; /* 让内容垂直居中 */
    height: 100%; /* 让 card-body 充满整个 card */
    font-weight: 600;
}


/* Category title不换行 */
.category-card-title {
    white-space: nowrap;       /* 禁止换行 */
    overflow: hidden;          /* 超出部分隐藏 */
    text-overflow: ellipsis;   /* 超出部分显示省略号 */
    display: block;            /* 确保 `div` 作为块级元素生效 */
    width: 98%;               /* 确保 `title` 填满整个 `card-body` */
}

/* Category, 初始状态：隐藏链接;让链接水平排列并等距分布 */
.card-links {
    display: flex;
    justify-content: space-between; /* 让链接均匀对齐 */
    padding-top: 0.2rem; /* 给上方一点间距 */
    opacity: 0; /* 设置透明度为 0（不可见） */
    visibility: hidden; /* 让元素完全隐藏，不占空间 */
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out; /* 添加平滑过渡动画 */
}

/* 当鼠标悬停在卡片上时，显示链接 */
.category-card:hover .card-links {
    opacity: 1; /* 透明度变为 1（完全可见） */
    visibility: visible; /* 让元素可见 */
}

/* Category统一链接样式 */
.category-card-preface-link,
.category-card-author-link {
    font-size: 0.9rem;
    color: #4169E1;
    text-decoration: none;
    transition: font-size 0.2s ease, text-decoration 0.3s ease;
}

/* 悬停效果 */
.category-card-preface-link:hover,
.category-card-author-link:hover {
    font-size: 1.5rem;
    text-decoration: underline;
}

/* Formal Logic 页面右侧目录样式 */
body.category .category-sidebar {
    position: fixed;
    right: 0;
    top: 3.2rem; /* 与导航栏的高度一致 */
    bottom: 0;
    width: 30%;
    overflow-y: auto;
    background-color: #f9f9f9;
    padding: 20px;
    border-left: 1px solid #ccc; /* 可选，添加左侧边框 */
}

/* Category page目录部分整体样式 */
.book-content {
    padding: 10px;
    list-style: none; /* 去除默认列表样式 */
}

/* 一级目录 (Part) */
.book-content ul {
    padding-left: 20px;
    list-style: none; /* 去除默认列表样式 */
}

/* Part 标题 */
.book-content strong {
    font-size: 1.2rem;
    font-weight: bold;
    display: block;
    margin-bottom: 7px;
}

/* 章节 (Chapter) */
.book-content ul li {
    margin-bottom: 5px;
}

/* 小节 (Section) */
.book-content ul li ul li {
    margin-bottom: 3px;
}

/* 目录链接样式 */
.book-content a {
    text-decoration: none;
    color: #007bff; /* 主题色 */
    transition: color 0.2s ease-in-out;
}

/* 悬停效果 */
.book-content a:hover {
    font-weight: 600;
    text-decoration: underline;
}


body.chapter .chapter-title-container {
    margin-left: -1.5rem;
    white-space: nowrap;  /* 防止换行 */
}

/* 对 chapter 页面生效 */
body.chapter .chapter-content-container {
    margin-left: 1rem;
    width: 70%;
    line-height: 1.6; /* 设置行间距 */
}

body.book_preface .preface-content-container,
body.book_author .author-content-container {
    width: 80%;
    margin: 0 auto;  /* 让容器水平居中 */
    line-height: 1.7; /* 设置行间距 */
}

body.book_preface .preface-title-container,
body.book_author .author-title-container {
    display: flex;           /* 使用 flex 布局 */
    justify-content: center; /* 水平居中 */
    align-items: center;     /* 垂直居中（如果需要） */
    text-align: center;      /* 确保内容文字居中 */
}

/* 对段落生效 
body.chapter .chapter-content-container p,
body.book_preface .preface-content-container p,
body.book_author .author-content-container p {
    line-height: 1.5;  设置行间距 
    ext-align: justify; /* 文本两端对齐 
} */



.rst-content {
    font-family: 'Open Sans', sans-serif;
    font-size: 0.82rem;
    line-height: 1.7;  /* 适度增加行距，提升可读性 */
    text-align: justify;  /* 両端揃え */
}

/* 调整 reStructuredText 生成的标题大小和行距 */
.rst-content h1 {
    font-weight: 600;
    font-size: 1.3rem;
    line-height: 1.2;  /* 适度增加行距，提升可读性 */
    margin-bottom: 1.2rem;  /* 添加间距，避免标题过于紧密 */
    margin-left: -1.0rem;
}

.rst-content h2 {
    font-size: 1.05rem;
    line-height: 1.2;
    margin-bottom: 1rem;
}

.rst-content h3 {
    font-weight: 600;
    font-size: 1.05rem;
    line-height: 1.2;
    margin-bottom: 0.8rem;
}

/* 代码块整体样式 */
pre {
    background-color: #f8f9fa;  /* 代码块背景色 */
    font-size: 0.79rem;
    font-family:'sans-serif';
    padding: 10px;
    border-radius: 6px;
    overflow-x: auto;
    white-space: pre-wrap; /* 允许换行 */
    border: 1px solid #ddd;
}

/* 行内代码（去除语法高亮样式） */
code {
    background: none;
    padding: 2px 4px;
    border-radius: 4px;
    color: inherit; /* 继承正常文本颜色 */
}